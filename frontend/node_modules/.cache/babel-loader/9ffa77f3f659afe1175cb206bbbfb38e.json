{"ast":null,"code":"import React, { Component } from \"react\";\nimport datas from \"../../data\";\n\nclass filter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filters: [{\n        categories: [],\n        size: null,\n        brand: null,\n        color: null,\n        price: null,\n        data: null\n      }]\n    };\n\n    this.changeState = filters => {\n      console.log(filters);\n    };\n\n    this.checkQuantities = products => {\n      let arrayOfQuantity = [];\n      let sum;\n\n      if (this.filters.size) {\n        products.map(product => {\n          product.colors.map(color => {\n            arrayOfQuantity.push(this.checkQuantity(color));\n          });\n          sum = this.reducermethod(arrayOfQuantity);\n          arrayOfQuantity = [];\n\n          if (sum == 0) {\n            this.splice(products, product);\n          }\n\n          return products;\n        });\n      } else {\n        return products;\n      }\n    };\n\n    this.checkQuantity = element => {\n      let result;\n      let color;\n\n      if (!this.filters.color) {\n        result = element.sizes.find(product => product.size == this.filters.size);\n      } else {\n        color = element.filter(product => product.color == this.filters.color);\n      }\n\n      return result.quantity;\n    };\n\n    this.findItem = () => {\n      let arrayofproduct = [];\n      let initialState = [...datas.products];\n\n      if (this.filters.categories.length > 0 && this.filters.price && this.filters.brand) {\n        this.filters.categories.map(categorie => arrayofproduct.push(this.filterMethod(initialState, \"categories\", categorie)));\n        arrayofproduct = [].concat(...arrayofproduct);\n        arrayofproduct = arrayofproduct.filter(product => {\n          return product.price <= this.filters.price && product.brand == this.filters.brand;\n        });\n      } else if (this.filters.categories.length > 0 && this.filters.price) {\n        this.filters.categories.map(categorie => arrayofproduct.push(this.filterMethod(initialState, \"categories\", categorie)));\n        arrayofproduct = [].concat(...arrayofproduct);\n        arrayofproduct = this.filterMethod(arrayofproduct, \"price\", this.filters.price);\n      } else if (this.filters.categories.length > 0 && this.filters.brand) {\n        this.filters.categories.map(categorie => arrayofproduct.push(this.filterMethod(initialState, \"categories\", categorie)));\n        arrayofproduct = [].concat(...arrayofproduct);\n        arrayofproduct = this.filterMethod(arrayofproduct, \"brand\", this.filters.brand);\n      } else if (this.filters.categories.length == 0 && this.filters.price) {\n        arrayofproduct.push(this.filterMethod(initialState, \"price\", this.filters.price));\n      } else if (this.filters.categories.length == 0 && this.filters.brand) {\n        console.log(\"i m here\");\n        arrayofproduct.push(this.filterMethod(initialState, \"brand\", this.filters.brand));\n      } else if (this.filters.categories.length > 0) {\n        this.filters.categories.map(categorie => {\n          arrayofproduct.push(this.filterMethod(initialState, \"categories\", categorie));\n        });\n      } else {\n        arrayofproduct = initialState;\n      }\n\n      const products = [].concat(...arrayofproduct);\n      return products;\n    };\n\n    this.filterMethod = (arrayOfProductsTofilter, keyOfProduct, valueOfProduct) => {\n      return arrayOfProductsTofilter.filter(product => {\n        return product[keyOfProduct] == valueOfProduct;\n      });\n    };\n  }\n\n}\n\nexport default filter;","map":{"version":3,"sources":["/Users/valentinlemaire/code/valentinLmr/projects/e-commerce/src/Component/Back-end/filters.js"],"names":["React","Component","datas","filter","state","filters","categories","size","brand","color","price","data","changeState","console","log","checkQuantities","products","arrayOfQuantity","sum","map","product","colors","push","checkQuantity","reducermethod","splice","element","result","sizes","find","quantity","findItem","arrayofproduct","initialState","length","categorie","filterMethod","concat","arrayOfProductsTofilter","keyOfProduct","valueOfProduct"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport datas from \"../../data\";\n\nclass filter extends Component {\n  state = {\n    filters: [\n      {\n        categories: [],\n        size: null,\n        brand: null,\n        color: null,\n        price: null,\n        data: null,\n      },\n    ],\n  };\n\n  changeState = (filters) => {\n    console.log(filters);\n  };\n\n  checkQuantities = (products) => {\n    let arrayOfQuantity = [];\n    let sum;\n\n    if (this.filters.size) {\n      products.map((product) => {\n        product.colors.map((color) => {\n          arrayOfQuantity.push(this.checkQuantity(color));\n        });\n        sum = this.reducermethod(arrayOfQuantity);\n        arrayOfQuantity = [];\n        if (sum == 0) {\n          this.splice(products, product);\n        }\n        return products;\n      });\n    } else {\n      return products;\n    }\n  };\n\n  checkQuantity = (element) => {\n    let result;\n    let color;\n    if (!this.filters.color) {\n      result = element.sizes.find(\n        (product) => product.size == this.filters.size\n      );\n    } else {\n      color = element.filter((product) => product.color == this.filters.color);\n    }\n    return result.quantity;\n  };\n\n  findItem = () => {\n    let arrayofproduct = [];\n    let initialState = [...datas.products];\n\n    if (\n      this.filters.categories.length > 0 &&\n      this.filters.price &&\n      this.filters.brand\n    ) {\n      this.filters.categories.map((categorie) =>\n        arrayofproduct.push(\n          this.filterMethod(initialState, \"categories\", categorie)\n        )\n      );\n      arrayofproduct = [].concat(...arrayofproduct);\n      arrayofproduct = arrayofproduct.filter((product) => {\n        return (\n          product.price <= this.filters.price &&\n          product.brand == this.filters.brand\n        );\n      });\n    } else if (this.filters.categories.length > 0 && this.filters.price) {\n      this.filters.categories.map((categorie) =>\n        arrayofproduct.push(\n          this.filterMethod(initialState, \"categories\", categorie)\n        )\n      );\n      arrayofproduct = [].concat(...arrayofproduct);\n      arrayofproduct = this.filterMethod(\n        arrayofproduct,\n        \"price\",\n        this.filters.price\n      );\n    } else if (this.filters.categories.length > 0 && this.filters.brand) {\n      this.filters.categories.map((categorie) =>\n        arrayofproduct.push(\n          this.filterMethod(initialState, \"categories\", categorie)\n        )\n      );\n      arrayofproduct = [].concat(...arrayofproduct);\n      arrayofproduct = this.filterMethod(\n        arrayofproduct,\n        \"brand\",\n        this.filters.brand\n      );\n    } else if (this.filters.categories.length == 0 && this.filters.price) {\n      arrayofproduct.push(\n        this.filterMethod(initialState, \"price\", this.filters.price)\n      );\n    } else if (this.filters.categories.length == 0 && this.filters.brand) {\n      console.log(\"i m here\");\n      arrayofproduct.push(\n        this.filterMethod(initialState, \"brand\", this.filters.brand)\n      );\n    } else if (this.filters.categories.length > 0) {\n      this.filters.categories.map((categorie) => {\n        arrayofproduct.push(\n          this.filterMethod(initialState, \"categories\", categorie)\n        );\n      });\n    } else {\n      arrayofproduct = initialState;\n    }\n\n    const products = [].concat(...arrayofproduct);\n    return products;\n  };\n\n  filterMethod = (arrayOfProductsTofilter, keyOfProduct, valueOfProduct) => {\n    return arrayOfProductsTofilter.filter((product) => {\n      return product[keyOfProduct] == valueOfProduct;\n    });\n  };\n}\n\nexport default filter;\n"]},"metadata":{},"sourceType":"module"}